

<!DOCTYPE HTML><html lang="zh-CN"><head><meta charset="UTF-8"/><meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1"/><meta name="renderer" content="webkit"/><meta property="qc:admins" content="15317273575564615446375"/><meta property="og:image" content="https://static.segmentfault.com/v-5c37017f/global/img/touch-icon.png"/><meta name="viewport"
              content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"/><meta name="alexaVerifyID" content="LkzCRJ7rPEUwt6fVey2vhxiw1vQ"/><meta name="apple-itunes-app" content="app-id=958101793, app-argument="><title>JavaScript 进阶之深入理解数据双向绑定 - 匠心博客 - SegmentFault 思否</title><meta name="description" content="谈起当前前端最热门的 js 框架，必少不了 Vue、React、Angular，对于大多数人来说，我们更多的是在使用框架，对于框架解决痛点背后使用的基本原理往往关注不多，近期在研读 Vue.js 源码，也在写源码解读的系列文..."/><meta name="keywords" content="mvvm,vue.js,javascript"/><link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="SegmentFault"/><link rel="shortcut icon" href="https://static.segmentfault.com/v-5c37017f/global/img/favicon.ico"/><link rel="apple-touch-icon" href="https://static.segmentfault.com/v-5c37017f/global/img/touch-icon.png"><meta name="msapplication-TileColor" content="#009a61"/><meta name="msapplication-square150x150logo" content="https://static.segmentfault.com/v-5c37017f/global/img/touch-icon.png"/><meta name="baidu_union_verify" content="bcf7fd80dca60d53d46d5b46e1b990ca"><link rel="alternate" type="application/atom+xml" title="SegmentFault 最新问题" href="/feeds/questions"><link rel="alternate" type="application/atom+xml" title="SegmentFault 最新文章" href="/feeds/blogs"><link rel="stylesheet" href="https://static.segmentfault.com/v-5c37017f/global/css/global.css"/><link rel="stylesheet" href="https://static.segmentfault.com/v-5c37017f/blog/css/blog.css"/><link rel="stylesheet" href="https://static.segmentfault.com/v-5c37017f/global/css/responsive.css"/><script type='text/javascript' src='https://sponsor.segmentfault.com/spcjs.php?id=1&block=1&repu=0&tag=mvvm,vue.js,javascript'></script></head><!-- 推荐引擎 --><script charset="utf-8" id="ParadigmSDK" src="https://nbrecsys.4paradigm.com/sdk/js/ParadigmSDK_v2.js" data="216" defSI="594"></script><script>
    ParadigmSDK.init("46e957bd9dea4acdaa15b4b64aff728f");
    ParadigmSDK.trackDetailPageShow();
</script><body data-mod="blog"
    class="blog-post "><!--[if lt IE 9]><div class="alert alert-danger topframe" role="alert">你的浏览器实在<strong>太太太太太太旧了</strong>，放学别走，升级完浏览器再说 <a target="_blank" class="alert-link" href="http://browsehappy.com">立即升级</a></div><![endif]--><img id="icon4weChat" style="height: 0;width: 0;" data-src="https://static.segmentfault.com/v-5c37017f/global/img/touch-icon-512.png"><div id="gridMapHoverBox" style="position:absolute; border: 1px solid #009a61; z-index:99; font-size: 10px; background:#fff"></div><div class="global-nav sf-header sf-header--index"><div class="bottom-nav visible-xs visible-sm "><div class="opts"><a class="opts-group " href="/"><i class="fa fa-home" aria-hidden="true"></i><span>首页</span></a><a class="opts-group " href="/questions"><i class="fa fa-comments" aria-hidden="true"></i><span>问答</span></a><a class="opts-group active" href="/blogs"><i class="fa fa-pencil-square" aria-hidden="true"></i><span>专栏</span></a><a class="opts-group " href="/lives"><i class="fa fa-play-circle" aria-hidden="true"></i><span>讲堂</span></a><div class="opts-group"><div class="btn-group dropup"><i class="fa fa-bars dropdown hoverDropdown" data-toggle="dropdown" aria-hidden="true"><span>更多</span></i><ul class="dropdown-menu"><li><a href="/jobs">职位</a></li><li><a href="/events">活动</a></li><li><a href="/tags">标签</a></li><li><a href="/badges">徽章</a></li></ul></div></div></div></div><nav class="container nav"><div class="visible-xs visible-sm header-response"><a href="/search" style="display:block"><i class="fa fa-search" aria-hidden="true"></i></a><div class="sf-header__logo sf-header__logo--response"><h1><a href="/" style="height:24px; background-size: auto 24px;"></a></h1></div><a href="/user/login" class="pull-right login-btn"><i class="fa fa-user" aria-hidden="true"></i></a></div><script>
mobileScroll(
    function(direction) { 
        try {
            if (direction === 'down') {
                document.querySelector('.bottom-nav').classList.add('hidden')
            } else {
                document.querySelector('.bottom-nav').classList.remove('hidden')
            }
        } catch(err) {}
    }
);    
function mobileScroll( fn ) {
    var beforeScrollTop = document.documentElement.scrollTop || document.body.scrollTop,
        fn = fn || function() {};
    window.addEventListener("scroll", function() {
        var afterScrollTop = document.documentElement.scrollTop || document.body.scrollTop,
            delta = afterScrollTop - beforeScrollTop;
        if( delta === 0 ) return false;
        fn( delta > 0 ? "down" : "up" );
        beforeScrollTop = afterScrollTop;
    }, false);
}
</script><div class="row hidden-xs hidden-sm"><div class="col-sm-8 col-md-9 col-lg-9"><div class="sf-header__logo"><h1><a href="/">SegmentFault</a></h1></div><div><ul class="menu list-inline pull-left hidden-xs"><li class="menu__item"><a href="/" class="">首页</a></li><li class="menu__item"><a href="/questions" class="">问答</a></li><li class="menu__item"><a href="/blogs" class="active-nav">专栏</a></li><li class="menu__item"><a class=" " href="/lives" class="">讲堂</a></li><li class="menu__item"><a href="/groups" class="">圈子</a></li><li class="menu__item menu__item--more dropdown"><a href="##" class="dropdown-toggle dropdownBtn" data-toggle="dropdown">
                                        发现<i class="fa fa-caret-down" style="font-size: 14px;margin-left: 5px;" aria-hidden="true"></i></a><div class="dropdown-block hidden"><ul class="dropdown-content-menu"><li><a href="/events">活动</a></li><li><a href="/tags">标签</a></li><li><a href="/jobs">找工作</a></li><li><a href="/users">排行榜</a></li><li><a href="/badges">徽章</a></li><li><a href="/notes">笔记</a></li><li><a href="https://docs.segmentfault.com" target="_blank">开发手册<i style="line-height: 20px;font-size: 12px;color: #F5A623;" class="ml10 fa fa-external-link-square"></i></a></li><li><a href="https://business.segmentfault.com/ads?utm_source=sf-header" target="_blank">广告投放<i style="line-height: 20px;font-size: 12px;color: #F5A623;" class="ml10 fa fa-external-link-square"></i></a></li></ul></div></li><li class="menu__item visible-sm-inline-block"><a href="/search"><span class="glyphicon glyphicon-search" style="vertical-align: middle;"></span></a></li></ul><form action="/search" class="header-search  hidden-sm hidden-xs pull-right" ><button class="btn btn-link"><span class="sr-only">搜索</span><span class="glyphicon glyphicon-search"></span></button><input id="searchBox" name="q" type="text"  placeholder="搜索问题或关键字" class="form-control" value="" /></form></div></div><div class="col-sm-4 col-md-3 col-lg-3 text-right"><ul class="opts list-inline hidden-xs"><li class="opts__item"><a href="/user/login" class="SFRegister btn-signin" style="margin-bottom:2px;">立即登录</a><a href="/user/register" class="SFLogin ml10 btn-signup"
                                       onClick="_gaq.push(['_trackEvent', 'Button', 'Click', 'Login']);">免费注册</a></li></ul></div></div></nav></div>
    
<input id="articleId" value="1190000010456158" class="hidden" />

<div class="wrap" data-blogid="1200000004001879">

    <div class="text-center block hidden-xs">
        <script type="text/javascript">
            OA_show(2);
        </script>
    </div>
    
    <div class="container mt15" style="position:relative">
        <div class="row">
            <div class="col-xs-12 col-md-9 main ">
                                <ol class="breadcrumb mb15">
                    <li><a href="/blogs">专栏</a></li>
                                        <li><a href="/blog/zhaomenghuan">匠心博客</a></li>
                                        <li class="active">文章详情</li>
                </ol>
                                <div class="post-topheader custom- pt0">
                    <div class="mb20">
                        <div class="block-for-right-border">
                            <div class="row">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                

                                    <div class="post-topheader__info" data-username="匠心"
                                         data-userslug="zhaomenghuan"
                                         data-useravatar="https://avatar-static.segmentfault.com/262/465/262465802-58cd40d15ba12_big64">


                                        <div class="article__author clearfix">
                                            <div class="article__authorleft">
                                                <a href="/u/zhaomenghuan">
                                                    <img class="avatar-40" src="https://avatar-static.segmentfault.com/262/465/262465802-58cd40d15ba12_big64" alt="匠心">
                                                </a>
                                            </div>
                                            <div class="article__authorright">
                                                <div class="article__authormeta">
                                                <a href="/u/zhaomenghuan" class="mr5 "><strong>匠心</strong></a>

                                                                                                <img src="https://static.segmentfault.com/v-5c37017f/global/img/rp.svg" class="mr5"><span style="color:#BF7158" class="mr10">4.2k</span>

                                                                                                发布于
                                                <a href="/blog/zhaomenghuan">匠心博客</a>
                                                
                                                
                                                <span class="hidden-xs">
                                                                                                                                                          <button type="button"
                                                               class="btn btn-xs btn-success follow-article ml10"
                                                               data-do="follow"
                                                               data-type="blog"
                                                               data-id="1200000004001879">关注专栏
                                                       </button>
                                                                                                                                                   </span>
                                                </div>
                                                
                                                <span style="display: block">
                                                    2017-08-01 发布
                                                </span>
                                            </div>
                                        </div>

                                        <h1 class="h1 post-topheader__info--title" id="articleTitle" data-id="1190000010456158">
                                            <a href="/a/1190000010456158"> JavaScript 进阶之深入理解数据双向绑定</a>
                                        </h1>

                                        <div class="content__tech hidden-xs">
                                            <a href="" class="blog-type-common blog-type-0-before" target="_blank" data-content="
                                                                                        翻译自 
                                                                                        "></a>
                                            
                                            <ul class="taglist--inline inline-block article__title--tag mr10">
                                                                                                    <li class="tagPopup mb5">
                                                        <a class="tag" href="/t/mvvm/blogs" data-toggle="popover"
                                                                                data-img="" data-placement="top"
                                                                                data-original-title="mvvm"
                                                                                data-id="1040000000307031">
                                                                                                                      mvvm
                                                        </a>
                                                    </li>
                                                                                                    <li class="tagPopup mb5">
                                                        <a class="tag" href="/t/vue.js/blogs" data-toggle="popover"
                                                                                data-img="https://avatar-static.segmentfault.com/256/038/2560380373-565be73e6fe13_big64" data-placement="top"
                                                                                data-original-title="vue.js"
                                                                                data-id="1040000004003243">
                                                                                                                      vue.js
                                                        </a>
                                                    </li>
                                                                                                    <li class="tagPopup mb5">
                                                        <a class="tag" href="/t/javascript/blogs" data-toggle="popover"
                                                                                data-img="https://avatar-static.segmentfault.com/195/823/1958237468-1040000000089436_big64" data-placement="top"
                                                                                data-original-title="javascript"
                                                                                data-id="1040000000089436">
                                                                                                                      javascript
                                                        </a>
                                                    </li>
                                                                                            </ul>

                                            <span>
                                                8.4k 次阅读
                                                &nbsp;&middot;&nbsp;
                                                读完需要 79 分钟 
                                                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!-- end .post-topheader -->

                <div class="visible-lg">
                    <div class="side-widget">
                        <div class="stream__item-zan btn btn-default mt0 mb15 ml0 mr0 pt0 pb0 pl0 pr0 " id="side-widget-votes-btn">
                            <span class="stream__item-zan-icon"></span>
                            <span class="stream__item-zan-number" id="side-widget-votes-num">52</span>
                        </div>

                        <i class="fa fa-bookmark item " id="side-widget-bookmarks-btn"></i>
                        <i class="fa fa-weibo item"></i>
                        <i class="fa fa-weixin item" data-toggle="popover" data-placement="right"></i>
                        <i class="fa fa-twitter item"></i>
                        <i class="fa fa-facebook item"></i>
                        <i class="fa fa-arrow-up item hidden"></i>
                    </div>
                </div>

                
                <div class="article fmt article__content" data-id="1190000010456158" data-license="nd">
                    
<h2>前言</h2>
<p>谈起当前前端最热门的 js 框架，必少不了 Vue、React、Angular，对于大多数人来说，我们更多的是在使用框架，对于框架解决痛点背后使用的基本原理往往关注不多，近期在研读 Vue.js 源码，也在写源码解读的系列文章。和多数源码解读的文章不同的是，我会尝试从一个初级前端的角度入手，由浅入深去讲解源码实现思路和基本的语法知识，通过一些基础事例一步步去实现一些小功能。</p>
<p>本场 Chat 是系列 Chat 的开篇，我会首先讲解一下数据双向绑定的基本原理，介绍对比一下三大框架的不同实现方式，同时会一步步完成一个简单的mvvm示例。读源码不是目的，只是一种学习的方式，目的是在读源码的过程中提升自己，学习基本原理，拓展编码的思维方式。</p>
<h2>模板引擎实现原理</h2>
<p>对于页面渲染，一般分为服务器端渲染和浏览器端渲染。一般来说服务器端吐html页面的方式渲染速度更快、更利于SEO，但是浏览器端渲染更利于提高开发效率和减少维护成本，是一种相关舒服的前后端协作模式，后端提供接口，前端做视图和交互逻辑。前端通过Ajax请求数据然后拼接html字符串或者使用js模板引擎、数据驱动的框架如Vue进行页面渲染。</p>
<p>在ES6和Vue这类框架出现以前，前端绑定数据的方式是动态拼接html字符串和js模板引擎。模板引擎起到数据和视图分离的作用，模板对应视图，关注如何展示数据，在模板外头准备的数据， 关注那些数据可以被展示。模板引擎的工作原理可以简单地分成两个步骤：模板解析 / 编译（Parse / Compile）和数据渲染（Render）两部分组成，当今主流的前端模板有三种方式：</p>
<ul>
<li>String-based templating (基于字符串的parse和compile过程)</li>
<li>Dom-based templating (基于Dom的link或compile过程)</li>
<li>Living templating (基于字符串的parse 和 基于dom的compile过程)</li>
</ul>
<h3>String-based templating</h3>
<p>基于字符串的模板引擎，本质上依然是字符串拼接的形式，只是一般的库做了封装和优化，提供了更多方便的语法简化了我们的工作。基本原理如下：</p>
<p><span class="img-wrap"><img data-src="/img/remote/1460000010065090?w=1008&amp;h=458" src="https://static.segmentfault.com/v-5c37017f/global/img/squares.svg" alt="String-based-Template" title="String-based-Template"></span></p>
<p>典型的库：</p>
<ul>
<li><a href="https://github.com/aui/art-template" rel="nofollow noreferrer">art-template</a></li>
<li><a href="https://github.com/janl/mustache.js" rel="nofollow noreferrer">mustache.js</a></li>
<li><a href="https://github.com/olado/doT" rel="nofollow noreferrer">doT</a></li>
</ul>
<p>之前的一篇文章中我介绍了js模板引擎的实现思路，感兴趣的朋友可以看看这里：<a href="https://segmentfault.com/a/1190000005804719">JavaScript进阶学习（一）—— 基于正则表达式的简单js模板引擎实现</a>。这篇文章中我们利用正则表达式实现了一个简单的js模板引擎，利用正则匹配查找出模板中<code>{{}}</code>之间的内容，然后替换为模型中的数据，从而实现视图的渲染。</p>
<pre><code>var template = function(tpl, data) {
  var re = /{{(.+?)}}/g,
    cursor = 0,
    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,    
    code = 'var r=[];\n';

  // 解析html
  function parsehtml(line) {
    // 单双引号转义，换行符替换为空格,去掉前后的空格
    line = line.replace(/('|")/g, '\\$1').replace(/\n/g, ' ').replace(/(^\s+)|(\s+$)/g,"");
    code +='r.push("' + line + '");\n';
  }
  
  // 解析js代码        
  function parsejs(line) {   
    // 去掉前后的空格
    line = line.replace(/(^\s+)|(\s+$)/g,"");
    code += line.match(reExp)? line + '\n' : 'r.push(' + 'this.' + line + ');\n';
  }    
    
  // 编译模板
  while((match = re.exec(tpl))!== null) {
    // 开始标签  {{ 前的内容和结束标签 }} 后的内容
    parsehtml(tpl.slice(cursor, match.index));
    // 开始标签  {{ 和 结束标签 }} 之间的内容
    parsejs(match[1]);
    // 每一次匹配完成移动指针
    cursor = match.index + match[0].length;
  }
  // 最后一次匹配完的内容
  parsehtml(tpl.substr(cursor, tpl.length - cursor));
  code += 'return r.join("");';
  return new Function(code.replace(/[\r\t\n]/g, '')).apply(data);
}</code></pre>
<p><strong>源代码：<a href="http://jsfiddle.net/zhaomenghuan/bw468orv/embedded/" rel="nofollow noreferrer">http://jsfiddle.net/zhaomengh...</a></strong></p>
<p>现在ES6支持了模板字符串，我们可以用比较简单的代码就可以实现类似的功能：</p>
<pre><code>const template = data =&gt; `
  &lt;p&gt;name: ${data.name}&lt;/p&gt;
  &lt;p&gt;age: ${data.profile.age}&lt;/p&gt;
  &lt;ul&gt;
    ${data.skills.map(skill =&gt; `
      &lt;li&gt;${skill}&lt;/li&gt;
    `).join('')}
  &lt;/ul&gt;`

const data = {
  name: 'zhaomenghuan',
  profile: { age: 24 },
  skills: ['html5', 'javascript', 'android']
}

document.body.innerHTML = template(data)</code></pre>
<h3>Dom-based templating</h3>
<p><span class="img-wrap"><img data-src="/img/remote/1460000010065091?w=827&amp;h=458" src="https://static.segmentfault.com/v-5c37017f/global/img/squares.svg" alt="Dom-based-Template" title="Dom-based-Template"></span></p>
<p>Dom-based templating 则是从DOM的角度去实现数据的渲染，我们通过遍历DOM树，提取属性与DOM内容，然后将数据写入到DOM树中，从而实现页面渲染。一个简单的例子如下：</p>
<pre><code>function MVVM(opt) {
  this.dom = document.querySelector(opt.el);
  this.data = opt.data || {};
  this.renderDom(this.dom);
}

MVVM.prototype = {
  init: {
    sTag: '{{',
    eTag: '}}'
  },
  render: function (node) {
    var self = this;
    var sTag = self.init.sTag;
    var eTag = self.init.eTag;

    var matchs = node.textContent.split(sTag);
    if (matchs.length){
      var ret = '';
      for (var i = 0; i &lt; matchs.length; i++) {
        var match = matchs[i].split(eTag);
        if (match.length == 1) {
            ret += matchs[i];
        } else {
            ret = self.data[match[0]];
        }
        node.textContent = ret;
      }
    }
  },
  renderDom: function(dom) {
    var self = this;

    var attrs = dom.attributes;
    var nodes = dom.childNodes;

    Array.prototype.forEach.call(attrs, function(item) {
      self.render(item);
    });

    Array.prototype.forEach.call(nodes, function(item) {
      if (item.nodeType === 1) {
        return self.renderDom(item);
      }
      self.render(item);
    });
  }
}

var app = new MVVM({
  el: '#app',
  data: {
    name: 'zhaomenghuan',
    age: '24',
    color: 'red'
  }
});</code></pre>
<p><strong>源代码：<a href="http://jsfiddle.net/zhaomenghuan/6e3yg6Lq/embedded/" rel="nofollow noreferrer">http://jsfiddle.net/zhaomengh...</a></strong></p>
<p>页面渲染的函数 renderDom 是直接遍历DOM树，而不是遍历html字符串。遍历DOM树节点属性（attributes）和子节点（childNodes），然后调用渲染函数render。当DOM树子节点的类型是元素时，递归调用遍历DOM树的方法。根据DOM树节点类型一直遍历子节点，直到文本节点。</p>
<p>render的函数作用是提取<code>{{}}</code>中的关键词，然后使用数据模型中的数据进行替换。我们通过textContent获取Node节点的nodeValue，然后使用字符串的split方法对nodeValue进行分割，提取<code>{{}}</code>中的关键词然后替换为数据模型中的值。</p>
<blockquote><p><strong>DOM 的相关基础</strong></p></blockquote>
<p><strong>注：元素类型对应NodeType</strong></p>
<table>
<thead><tr>
<th align="center">元素类型</th>
<th align="center">NodeType</th>
</tr></thead>
<tbody>
<tr>
<td align="center">元素</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">属性</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">文本</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">注释</td>
<td align="center">8</td>
</tr>
<tr>
<td align="center">文档</td>
<td align="center">9</td>
</tr>
</tbody>
</table>
<p>childNodes 属性返回包含被选节点的子节点的 NodeList。childNodes包含的不仅仅只有html节点，所有属性，文本、注释等节点都包含在childNodes里面。children只返回元素如input, span, script, div等，不会返回TextNode，注释。</p>
<h2>数据双向绑定实现原理</h2>
<p>js模板引擎可以认为是一个基于MVC的结构，我们通过建立模板作为视图，然后通过引擎函数作为控制器实现数据和视图的绑定，从而实现实现数据在页面渲染，但是当数据模型发生变化时，视图不能自动更新；当视图数据发生变化时，模型数据不能实现更新，这个时候双向数据绑定应运而生。检测视图数据更新实现数据绑定的方法有很多种，目前主要分为三个流派，Angular使用的是脏检查，只在特定的事件下才会触发视图刷新，Vue使用的是Getter/Setter机制，而React则是通过 Virtual DOM 算法检查DOM的变动的刷新机制。</p>
<p>本文限于篇幅和内容在此只探讨一下 Vue.js 数据绑定的实现，对于 angular 和 react 后续再做说明，读者也可以自行阅读源码。Vue 监听数据变化的机制是把一个普通 JavaScript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter。Vue 2.x 对 Virtual DOM 进行了支持，这部分内容后续我们再做探讨。</p>
<h3>引子</h3>
<p>为了更好的理解Vue中视图和数据更新的机制，我们先看一个简单的例子：</p>
<pre><code>var o = {
  a: 0 
}
Object.defineProperty(o, "b", { 
  get: function () { 
    return this.a + 1; 
  },
  set: function (value) { 
    this.a = value / 2; 
  }
});
console.log(o.a); // "0"
console.log(o.b); // "1"

// 更新o.a
o.a = 5;
console.log(o.a); // "5"
console.log(o.b); // "6"

// 更新o.b
o.b = 10; 
console.log(o.a); // "5"
console.log(o.b); // "6"</code></pre>
<p>这里我们可以看出对象o的b属性的值依赖于a属性的值，同时b属性值的变化又可以改变a属性的值，这个过程相关的属性值的变化都会影响其他相关的值进行更新。反过来我们看看如果不使用Object.defineProperty()方法，上述的问题通过直接给对象属性赋值的方法实现，代码如下：</p>
<pre><code>var o = {
  a: 0
}    
o.b = o.a + 1;
console.log(o.a); // "0"
console.log(o.b); // "1"

// 更新o.a
o.a = 5;
o.b = o.a + 1;
console.log(o.a); // "5"
console.log(o.b); // "6"

// 更新o.b
o.b = 10; 
o.a = o.b / 2;
o.b = o.a + 1;
console.log(o.a); // "5"
console.log(o.b); // "6"</code></pre>
<p>很显然使用<code>Object.defineProperty()</code>方法可以更方便的监听一个对象的变化。当我们的视图和数据任何一方发生变化的时候，我们希望能够通知对方也更新，这就是所谓的数据双向绑定。既然明白这个道理我们就可以看看Vue源码中相关的处理细节。</p>
<h4><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" rel="nofollow noreferrer">Object.defineProperty()</a></h4>
<blockquote><p>Object.defineProperty()方法可以直接在一个对象上定义一个新属性，或者修改一个已经存在的属性， 并返回这个对象。</p></blockquote>
<p>语法：Object.defineProperty(obj, prop, descriptor)</p>
<p><strong>参数：</strong></p>
<ul>
<li>obj：需要定义属性的对象。</li>
<li>prop：需被定义或修改的属性名。</li>
<li>descriptor：需被定义或修改的属性的描述符。</li>
</ul>
<p><strong>返回值：</strong>返回传入函数的对象，即第一个参数obj</p>
<p>该方法重点是描述，对象里目前存在的属性描述符有两种主要形式：<strong>数据描述符</strong>和<strong>存取描述符</strong>。<strong>数据描述符</strong>是一个拥有可写或不可写值的属性。<strong>存取描述符</strong>是由一对 getter-setter 函数功能来描述的属性。描述符必须是两种形式之一；不能同时是两者。</p>
<p><strong>数据描述符</strong>和<strong>存取描述符</strong>均具有以下可选键值：</p>
<ul>
<li>
<strong>configurable</strong>：当且仅当该属性的 configurable 为 true 时，该属性才能够被改变，也能够被删除。默认为 false。</li>
<li>
<strong>enumerable</strong>：当且仅当该属性的 enumerable 为 true 时，该属性才能够出现在对象的枚举属性中。默认为 false。</li>
</ul>
<p><strong>数据描述符</strong>同时具有以下可选键值：</p>
<ul>
<li>
<strong>value</strong>：该属性对应的值。可以是任何有效的 JavaScript 值（数值，对象，函数等）。默认为 undefined。</li>
<li>
<strong>writable</strong>：当且仅当仅当该属性的writable为 true 时，该属性才能被赋值运算符改变。默认为 false。</li>
</ul>
<p><strong>存取描述符</strong>同时具有以下可选键值：</p>
<ul>
<li>
<strong>get</strong>：一个给属性提供 getter 的方法，如果没有 getter 则为 undefined。该方法返回值被用作属性值。默认为undefined。</li>
<li>
<strong>set</strong>：一个给属性提供 setter 的方法，如果没有 setter 则为 undefined。该方法将接受唯一参数，并将该参数的新值分配给该属性。默认为undefined。</li>
</ul>
<p>我们可以通过Object.defineProperty()方法精确添加或修改对象的属性。比如，直接赋值创建的属性默认情况是可以枚举的，但是我们可以通过Object.defineProperty()方法设置enumerable属性为false为不可枚举。</p>
<pre><code>var obj = {
  a: 0,
  b: 1
}
for (var prop in obj) {
  console.log(`obj.${prop} = ${obj[prop]}`);
}

结果：
"obj.a = 0"
"obj.b = 1"</code></pre>
<p>我们通过Object.defineProperty()修改如下：</p>
<pre><code>var obj = {
  a: 0,
  b: 1
}
Object.defineProperty(obj, 'b', {
  enumerable: false
})
for (var prop in obj) {
  console.log(`obj.${prop} = ${obj[prop]}`);
}

结果：
"obj.a = 0"</code></pre>
<p>这里需要说明的是我们使用Object.defineProperty()默认情况下是enumerable属性为false，例如：</p>
<pre><code>var obj = {
  a: 0
}
Object.defineProperty(obj, 'b', {
  value: 1
})
for (var prop in obj) {
  console.log(`obj.${prop} = ${obj[prop]}`);
}

结果：
"obj.a = 0"</code></pre>
<p>其他描述属性使用方法类似，不做赘述。Vue源码<code>core/util/lang.js</code>S中定义了这样一个方法：</p>
<pre><code>/**
 * Define a property.
 */
export function def (obj: Object, key: string, val: any, enumerable?: boolean) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  })
}</code></pre>
<h4><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor" rel="nofollow noreferrer">Object.getOwnPropertyDescriptor() </a></h4>
<blockquote><p>Object.getOwnPropertyDescriptor() 返回指定对象上一个自有属性对应的属性描述符。（自有属性指的是直接赋予该对象的属性，不需要从原型链上进行查找的属性）</p></blockquote>
<p>语法：Object.getOwnPropertyDescriptor(obj, prop)</p>
<p><strong>参数：</strong></p>
<ul>
<li>obj：在该对象上查看属性</li>
<li>prop：一个属性名称，该属性的属性描述符将被返回</li>
</ul>
<p><strong>返回值：</strong>如果指定的属性存在于对象上，则返回其属性描述符（property descriptor），否则返回 undefined。可以访问“属性描述符”内容，例如前面的例子：</p>
<pre><code>var o = {
  a: 0 
}
            
Object.defineProperty(o, "b", { 
  get: function () { 
    return this.a + 1; 
  },
  set: function (value) { 
    this.a = value / 2; 
  }
});
            
var des = Object.getOwnPropertyDescriptor(o,'b');
console.log(des);
console.log(des.get);</code></pre>
<h3>Vue源码分析</h3>
<p>本次我们主要分析一下Vue 数据绑定的源码，这里我直接将 <a href="https://github.com/vuejs/vue/blob/v1.0.28/src/observer/index.js" rel="nofollow noreferrer">Vue.js 1.0.28</a> 版本的代码稍作删减拿过来进行，2.x 的代码基于 flow 静态类型检查器书写的，代码除了编码风格在整体结构上基本没有太大改动，所以依然基于 1.x 进行分析，对于存在差异的部分加以说明。</p>
<p><img alt="Alt text" title="Alt text" src=""></p>
<h4>监听对象变动</h4>
<pre><code>// 观察者构造函数
function Observer (value) {
  this.value = value
  this.walk(value)
}

// 递归调用，为对象绑定getter/setter
Observer.prototype.walk = function (obj) {
  var keys = Object.keys(obj)
  for (var i = 0, l = keys.length; i &lt; l; i++) {
    this.convert(keys[i], obj[keys[i]])
  }
}

// 将属性转换为getter/setter
Observer.prototype.convert = function (key, val) {
  defineReactive(this.value, key, val)
}

// 创建数据观察者实例
function observe (value) {
  // 当值不存在或者不是对象类型时，不需要继续深入监听
  if (!value || typeof value !== 'object') {
    return
  }
  return new Observer(value)
}

// 定义对象属性的getter/setter
function defineReactive (obj, key, val) {
  var property = Object.getOwnPropertyDescriptor(obj, key)
  if (property &amp;&amp; property.configurable === false) {
    return
  }

  // 保存对象属性预先定义的getter/setter
  var getter = property &amp;&amp; property.get
  var setter = property &amp;&amp; property.set

  var childOb = observe(val)
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val
      console.log("访问："+key)
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val
      if (newVal === value) {
        return
      }
      if (setter) {
        setter.call(obj, newVal)
      } else {
        val = newVal
      }
      // 对新值进行监听
      childOb = observe(newVal)
      console.log('更新：' + key + ' = ' + newVal)
    }
  })
}</code></pre>
<p>定义一个对象作为数据模型，并监听这个对象。</p>
<pre><code>let data = {
  user: {
    name: 'zhaomenghuan',
    age: '24'
  },
  address: {
    city: 'beijing'
  }
}
observe(data)

console.log(data.user.name) 
// 访问：user 
// 访问：name

data.user.name = 'ZHAO MENGHUAN'
// 访问：user
// 更新：name = ZHAO MENGHUAN</code></pre>
<p>效果如下：<br><span class="img-wrap"><img data-src="/img/remote/1460000010065093?w=679&amp;h=544" src="https://static.segmentfault.com/v-5c37017f/global/img/squares.svg" alt="" title=""></span></p>
<h4>监听数组变动</h4>
<p>上面我们通过Object.defineProperty把对象的属性全部转为 getter/setter 从而实现监听对象的变动，但是对于数组对象无法通过Object.defineProperty实现监听。Vue 包含一组观察数组的变异方法，所以它们也将会触发视图更新。</p>
<pre><code>const arrayProto = Array.prototype
const arrayMethods = Object.create(arrayProto)

function def(obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  })
}

// 数组的变异方法
;[
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
]
.forEach(function (method) {
  // 缓存数组原始方法
  var original = arrayProto[method]
  def(arrayMethods, method, function mutator () {
    var i = arguments.length
    var args = new Array(i)
    while (i--) {
      args[i] = arguments[i]
    }
    console.log('数组变动')
    return original.apply(this, args)
  })
})</code></pre>
<p>Vue.js 1.x 在Array.prototype原型对象上添加了<code>$set</code> 和 <code>$remove</code>方法，在2.X后移除了，使用全局 API <code>Vue.set</code> 和 <code>Vue.delete</code>代替了，后续我们再分析。</p>
<p>定义一个数组作为数据模型，并对这个数组调用变异的七个方法实现监听。</p>
<pre><code>let skills = ['JavaScript', 'Node.js', 'html5']
// 原型指针指向具有变异方法的数组对象
skills.__proto__ = arrayMethods

skills.push('java')
// 数组变动
skills.pop()
// 数组变动</code></pre>
<p>效果如下：<br><span class="img-wrap"><img data-src="/img/remote/1460000010065094?w=679&amp;h=544" src="https://static.segmentfault.com/v-5c37017f/global/img/squares.svg" alt="" title=""></span></p>
<p>我们将需要监听的数组的原型指针指向我们定义的数组对象，这样我们的数组在调用上面七个数组的变异方法时，能够监听到变动从而实现对数组进行跟踪。</p>
<p>对于<code>__proto__</code>属性，在ES2015中正式被加入到规范中，标准明确规定，只有浏览器必须部署这个属性，其他运行环境不一定需要部署，所以 Vue 是先进行了判断，当<code>__proto__</code>属性存在时将原型指针<code>__proto__</code>指向具有变异方法的数组对象，不存在时直接将具有变异方法挂在需要追踪的对象上。</p>
<p>我们可以在上面Observer观察者构造函数中添加对数组的监听，源码如下：</p>
<pre><code>const hasProto = '__proto__' in {}
const arrayKeys = Object.getOwnPropertyNames(arrayMethods)

// 观察者构造函数
function Observer (value) {
  this.value = value
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment
    augment(value, arrayMethods, arrayKeys)
    this.observeArray(value)
  } else {
    this.walk(value)
  }
}

// 观察数组的每一项
Observer.prototype.observeArray = function (items) {
  for (var i = 0, l = items.length; i &lt; l; i++) {
    observe(items[i])
  }
}

// 将目标对象/数组的原型指针__proto__指向src
function protoAugment (target, src) {
  target.__proto__ = src
}

// 将具有变异方法挂在需要追踪的对象上
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i &lt; l; i++) {
    var key = keys[i]
    def(target, key, src[key])
  }
}</code></pre>
<blockquote><p><strong>原型链</strong></p></blockquote>
<p>对于不了解原型链的朋友可以看一下我这里画的一个基本关系图：<br><img alt="Alt text" title="Alt text" src=""></p>
<ul>
<li>原型对象是构造函数的prototype属性，是所有实例化对象共享属性和方法的原型对象；</li>
<li>实例化对象通过new构造函数得到，都继承了原型对象的属性和方法；</li>
<li>原型对象中有个隐式的constructor，指向了构造函数本身。</li>
</ul>
<blockquote><p><strong>Object.create</strong></p></blockquote>
<p>Object.create 使用指定的原型对象和其属性创建了一个新的对象。</p>
<pre><code>const arrayProto = Array.prototype
const arrayMethods = Object.create(arrayProto)</code></pre>
<p>这一步是通过 Object.create 创建了一个原型对象为Array.prototype的空对象。然后通过Object.defineProperty方法对这个对象定义几个变异的数组方法。有些新手可能会直接修改 Array.prototype 上的方法，这是很危险的行为，这样在引入的时候会全局影响Array 对象的方法，而使用Object.create实质上是完全了一份拷贝，新生成的arrayMethods对象的原型指针<code>__proto__</code>指向了Array.prototype，修改arrayMethods 对象不会影响Array.prototype。</p>
<p>基于这种原理，我们通常会使用Object.create 实现类式继承。</p>
<pre><code>// 实现继承
var extend = function(Child, Parent) {
    // 拷贝Parent原型对象
    Child.prototype = Object.create(Parent.prototype);
    // 将Child构造函数赋值给Child的原型对象
    Child.prototype.constructor = Child;
}

// 实例
var Parent = function () {
    this.name = 'Parent';
}
Parent.prototype.getName = function () {
    return this.name;
}
var Child = function () {
    this.name = 'Child';
}
extend(Child, Parent);
var child = new Child();
console.log(child.getName())</code></pre>
<h4>发布-订阅模式</h4>
<p>在上面一部分我们通过Object.defineProperty把对象的属性全部转为 getter/setter 以及 数组变异方法实现了对数据模型变动的监听，在数据变动的时候，我们通过console.log打印出来提示了，但是对于框架而言，我们相关的逻辑如果直接写在那些地方，自然是不够优雅和灵活的，这个时候就需要引入常用的设计模式去实现，vue.js采用了发布-订阅模式。发布-订阅模式主要是为了达到一种“高内聚、低耦合"的效果。</p>
<p>Vue的Watcher订阅者作为Observer和Compile之间通信的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图。</p>
<pre><code>/**
 * 观察者对象
 */
function Watcher(vm, expOrFn, cb) {
    this.vm = vm
    this.cb = cb
    this.depIds = {}
    if (typeof expOrFn === 'function') {
        this.getter = expOrFn
    } else {
        this.getter = this.parseExpression(expOrFn)
    }
    this.value = this.get()
}

/**
 * 收集依赖
 */
Watcher.prototype.get = function () {
    // 当前订阅者(Watcher)读取被订阅数据的最新更新后的值时，通知订阅者管理员收集当前订阅者
    Dep.target = this
    // 触发getter，将自身添加到dep中
    const value = this.getter.call(this.vm, this.vm)
    // 依赖收集完成，置空，用于下一个Watcher使用
    Dep.target = null
    return value
}

Watcher.prototype.addDep = function (dep) {
    if (!this.depIds.hasOwnProperty(dep.id)) {
        dep.addSub(this)
        this.depIds[dep.id] = dep
    }
}

/**
 * 依赖变动更新
 *
 * @param {Boolean} shallow
 */
Watcher.prototype.update = function () {
    this.run()
}

Watcher.prototype.run = function () {
    var value = this.get()
    if (value !== this.value) {
        var oldValue = this.value
        this.value = value
        // 将newVal, oldVal挂载到MVVM实例上
        this.cb.call(this.vm, value, oldValue)
    }
}

Watcher.prototype.parseExpression = function (exp) {
    if (/[^\w.$]/.test(exp)) {
        return
    }
    var exps = exp.split('.')
    
    return function(obj) {
        for (var i = 0, len = exps.length; i &lt; len; i++) {
            if (!obj) return
            obj = obj[exps[i]]
        }
        return obj
    }
}</code></pre>
<p>Dep 是一个数据结构，其本质是维护了一个watcher队列，负责添加watcher，更新watcher，移除watcher，通知watcher更新。</p>
<pre><code>let uid = 0

function Dep() {
    this.id = uid++
    this.subs = []
}

Dep.target = null

/**
 * 添加一个订阅者
 *
 * @param {Directive} sub
 */
Dep.prototype.addSub = function (sub) {
    this.subs.push(sub)
}

/**
 * 移除一个订阅者
 *
 * @param {Directive} sub
 */
Dep.prototype.removeSub = function (sub) {
    let index = this.subs.indexOf(sub);
    if (index !== -1) {
        this.subs.splice(index, 1);
    }
}

/**
 * 将自身作为依赖添加到目标watcher
 */
Dep.prototype.depend = function () {
    Dep.target.addDep(this)
}

/**
 * 通知数据变更
 */
Dep.prototype.notify = function () {
    var subs = toArray(this.subs)
    // stablize the subscriber list first
    for (var i = 0, l = subs.length; i &lt; l; i++) {
        // 执行订阅者的update更新函数
        subs[i].update()
    }
}</code></pre>
<h4>模板编译</h4>
<p>compile主要做的事情是解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图。</p>
<pre><code>function Compile(el, value) {
    this.$vm = value
    this.$el = this.isElementNode(el) ? el : document.querySelector(el)
    if (this.$el) {
        this.compileElement(this.$el)
    }
}

Compile.prototype.compileElement = function (el) {
    let self = this
    let childNodes = el.childNodes

    ;[].slice.call(childNodes).forEach(node =&gt; {
        let text = node.textContent
        let reg = /\{\{((?:.|\n)+?)\}\}/
        // 处理element节点
        if (self.isElementNode(node)) {
            self.compile(node)
        } else if (self.isTextNode(node) &amp;&amp; reg.test(text)) { // 处理text节点
            self.compileText(node, RegExp.$1.trim())
        }
        // 解析子节点包含的指令
        if (node.childNodes &amp;&amp; node.childNodes.length) {
            self.compileElement(node)
        }
    })
}

Compile.prototype.compile = function (node) {
    let nodeAttrs = node.attributes
    let self = this

    ;[].slice.call(nodeAttrs).forEach(attr =&gt; {
        var attrName = attr.name
        if (self.isDirective(attrName)) {
            let exp = attr.value
            let dir = attrName.substring(2)
            if (self.isEventDirective(dir)) {
                compileUtil.eventHandler(node, self.$vm, exp, dir)
            } else {
                compileUtil[dir] &amp;&amp; compileUtil[dir](node, self.$vm, exp)
            }
            node.removeAttribute(attrName)
        }
    });
}

Compile.prototype.compileText = function (node, exp) {
    compileUtil.text(node, this.$vm, exp);
}

Compile.prototype.isDirective = function (attr) {
    return attr.indexOf('v-') === 0
}

Compile.prototype.isEventDirective = function (dir) {
    return dir.indexOf('on') === 0;
}

Compile.prototype.isElementNode = function (node) {
    return node.nodeType === 1
}

Compile.prototype.isTextNode = function (node) {
    return node.nodeType === 3
}

// 指令处理集合
var compileUtil = {
    text: function (node, vm, exp) {
        this.bind(node, vm, exp, 'text')
    },
    html: function (node, vm, exp) {
        this.bind(node, vm, exp, 'html')
    },
    model: function (node, vm, exp) {
        this.bind(node, vm, exp, 'model')

        let self = this, val = this._getVMVal(vm, exp)
        node.addEventListener('input', function (e) {
            var newValue = e.target.value
            if (val === newValue) {
                return
            }
            self._setVMVal(vm, exp, newValue)
            val = newValue
        });
    },
    bind: function (node, vm, exp, dir) {
        var updaterFn = updater[dir + 'Updater']
        updaterFn &amp;&amp; updaterFn(node, this._getVMVal(vm, exp))
        new Watcher(vm, exp, function (value, oldValue) {
            updaterFn &amp;&amp; updaterFn(node, value, oldValue)
        })
    },
    eventHandler: function (node, vm, exp, dir) {
        var eventType = dir.split(':')[1],
            fn = vm.$options.methods &amp;&amp; vm.$options.methods[exp];

        if (eventType &amp;&amp; fn) {
            node.addEventListener(eventType, fn.bind(vm), false);
        }
    },
    _getVMVal: function (vm, exp) {
        var val = vm
        exp = exp.split('.')
        exp.forEach(function (k) {
            val = val[k]
        })
        return val
    },
    _setVMVal: function (vm, exp, value) {
        var val = vm;
        exp = exp.split('.')
        exp.forEach(function (k, i) {
            // 非最后一个key，更新val的值
            if (i &lt; exp.length - 1) {
                val = val[k]
            } else {
                val[k] = value
            }
        })
    }
}

var updater = {
    textUpdater: function (node, value) {
        node.textContent = typeof value == 'undefined' ? '' : value
    },
    htmlUpdater: function (node, value) {
        node.innerHTML = typeof value == 'undefined' ? '' : value
    },
    modelUpdater: function (node, value, oldValue) {
        node.value = typeof value == 'undefined' ? '' : value
    }
}</code></pre>
<p>这种实现和我们讲到的Dom-based templating类似，只是更加完备，具有自定义指令的功能。在遍历节点属性和文本节点的时候，可以编译具备<code>{{}}</code>表达式或<code>v-xxx</code>的属性值的节点，并且通过添加 <code>new Watcher()</code>及绑定事件函数，监听数据的变动从而对视图实现双向绑定。</p>
<h4>MVVM实例</h4>
<p>在数据绑定初始化的时候，我们需要通过<code>new Observer()</code>来监听数据模型变化，通过<code>new Compile()</code>来解析编译模板指令，并利用Watcher搭起Observer和Compile之间的通信桥梁。</p>
<pre><code>/**
 * @class 双向绑定类 MVVM
 * @param {[type]} options [description]
 */
function MVVM(options) {
    this.$options = options || {}
    // 简化了对data的处理
    let data = this._data = this.$options.data
    // 监听数据
    observe(data)
    new Compile(options.el || document.body, this)
}

MVVM.prototype.$watch = function (expOrFn, cb) {
    new Watcher(this, expOrFn, cb)
}</code></pre>
<p>为了能够直接通过实例化对象操作数据模型，我们需要为MVVM实例添加一个数据模型代理的方法：</p>
<pre><code>MVVM.prototype._proxy = function (key) {
    Object.defineProperty(this, key, {
        configurable: true,
        enumerable: true,
        get: () =&gt; this._data[key],
        set: (val) =&gt; {
            this._data[key] = val
        }
    })
}</code></pre>
<p>至此我们可以通过一个小例子来说明本文的内容：</p>
<pre><code>&lt;div id="app"&gt;
    &lt;h3&gt;{{user.name}}&lt;/h3&gt;
    &lt;input type="text" v-model="modelValue"&gt;
    &lt;p&gt;{{modelValue}}&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
    let vm = new MVVM({
        el: '#app',
        data: {
            modelValue: '',
            user: {
                name: 'zhaomenghuan',
                age: '24'
            },
            address: {
                city: 'beijing'
            },
            skills: ['JavaScript', 'Node.js', 'html5']
        }
    })
    
    vm.$watch('modelValue', val =&gt; console.log(`watch modelValue ：${val}`))
&lt;/script&gt;</code></pre>
<p>本文目的不是为了造一个轮子，而是在学习优秀框架实现的过程中去提升自己，搞清楚框架发展的前因后果，由浅及深去学习基础，本文参考了网上很多优秀博主的文章，由于时间关系，有些内容没有做深入探讨，觉得还是有些遗憾，在后续的学习中会更多的独立思考，提出更多自己的想法。</p>
<h2>参考文档</h2>
<ul>
<li><a href="http://leeluolee.github.io/2014/10/10/template-engine/" rel="nofollow noreferrer">前端模板技术面面观</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" rel="nofollow noreferrer">Object.defineProperty()</a></li>
<li><a href="http://jiongks.name/blog/vue-code-review/" rel="nofollow noreferrer">Vue.js 源码学习笔记</a></li>
<li><a href="https://github.com/youngwind/blog" rel="nofollow noreferrer">vue早期源码学习系列</a></li>
<li><a href="https://github.com/georgebbbb/fakeVue" rel="nofollow noreferrer">解析最简单的observer和watcher</a></li>
<li><a href="https://github.com/DMQ/mvvm" rel="nofollow noreferrer">剖析Vue实现原理 - 如何实现双向绑定mvvm</a></li>
</ul>
<h2>说明</h2>
<blockquote><p>本文的完整代码及图片可以在这里下载：<strong><a href="https://github.com/zhaomenghuan/learn-javascript" rel="nofollow noreferrer">learn-javascript/mvvm</a></strong></p></blockquote>
<hr>
<p>原文首发于 GitChat ：<a href="http://gitbook.cn/books/593faaf7d3845323661a4cec/index.html" rel="nofollow noreferrer">http://gitbook.cn/books/593fa...</a>，欢迎关注我的新话题：<a href="http://gitbook.cn/m/mazi/activity/596a301db5bcf446af77f0f8" rel="nofollow noreferrer">JavaScript 进阶之 Vue.js + Node.js 入门实战开发</a>。</p>
<p>我在segmentfault上有两期讲座，欢迎来围观：<br><a href="https://segmentfault.com/l/1500000009542402?r=bPqXdU">html5+ App开发工程化实践之路</a><br><a href="https://segmentfault.com/l/1500000010042078?r=bPqXdU">html5+ App开发之 Android 平台离线集成 5+ SDK</a></p>

                </div>
                                                
                <div class="clearfix mt10">
                    <ul class="article-operation list-inline pull-left mt15"><li><a target="_blank"href="https://creativecommons.org/licenses/by-nc-nd/4.0/"><img class="mb5" src="https://static.segmentfault.com/v-5c37017f/global/img/creativecommons-cc.svg" height="20"/></a></li><li class="dropdown js__content-ops hidden-xs" data-module="article"
                                data-id="1190000010456158"
                                data-typetext="文章"><a href="javascript:void(0);" class="dropdown-toggle text-muted" data-toggle="dropdown"><i class="fa fa-ellipsis-h" aria-hidden="true"></i></a><ul class="dropdown-menu dropdown-menu-left"><li><a href="#911"
                                           data-toggle="modal"
                                           data-target="#911"
                                           data-action="report"
                                        >举报</a></li></ul></li></ul>
                    <div class="pull-right mt-10 hidden-xs">
                        <div class="widget-share__full" data-text="JavaScript 进阶之深入理解数据双向绑定"
 data-url="https://segmentfault.com/a/1190000010456158" data-shorturl="http://sfau.lt/b5R2hS"></div>


                    </div>
                </div>
                <div class="mt10 text-center mb30"><button type="button" id="mainLike" data-id="1190000010456158"
                                    class="btn btn-success btn-lg mr15 "><span id="mainLikeText">赞</span>&nbsp;&nbsp;<span class="seprator">|</span>&nbsp;&nbsp;
                                <span id="mainLikeNum">52 </span></button><button type="button" id="mainBookmark" data-type="article" data-id="1190000010456158"
                                    class="btn btn-default btn-lg "><span id="mainBookmarkText">收藏</span>&nbsp;&nbsp;<span class="seprator">|</span>&nbsp;&nbsp;<span id="mainBookmarkNum">326</span></button><br><button type="button" data-id="1190000010456158"
                                        class="btn btn-danger btn-lg mt15 article__reward-btn">
                                    赞赏支持
                                </button></div><div class="mt30 mb30 text-center article__reward-info"><span class="mr10">如果觉得我的文章对你有用，请随意赞赏</span></div>                
                                <script type='text/javascript'>
                    OA_show(3);
                </script>

                <h4 class="pt20 mb15 mt0 border-top">你可能感兴趣的</h4>

                
                <div class="mb15 block">
                    <script type='text/javascript'>
                        OA_show(4);
                    </script>
                </div>

                                <div id="paradigm-article-related"></div>

                
        <div class="comments--news comments--default comments--article 
    " 
    data-id="1190000010456158" data-user-id="" data-author-id="1030000004001836 "
         data-is-admin="null" id="goToReplyArea">
                    <div class="mb10 clearfix">
                <strong class="comments-stat pull-left mr10">4 条评论</strong>

                                                    <div class="btn-group btn-group-xs pull-right comments-sort btn-group-menu" role="menu">
                        <a href="javascript:;" 
                           class="btn btn-default active" data-sort="default">默认排序</a>
                        <a href="javascript:;" 
                           class="btn btn-default" data-sort="desc">时间排序</a>
                    </div>
                            </div>
                <div class="comments-container">
                                <div class="comments-list">
                <div class="comments-item" data-id="1050000010532035">
            <div class="pull-left">
                <a href="/u/liutong" target="_blank"><img class="avatar-32 " src="https://avatar-static.segmentfault.com/177/920/1779200938-5a96b802bc573_big64" alt=""></a>
            </div>
            <div class="comments-content">
                <div class="comment-trigger">
                    <div class="pull-right comment-option">
                                                <a href="#911" class="ml10" data-toggle="modal" data-target="#911" data-action="report" data-action-text="举报" data-module="comment" data-id="1050000010532035" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a>
                                            </div>
                    <strong><a target="_blank" href="/u/liutong">一只会飞的猪</a></strong>
                    <span class="comments-isAuthor hide"></span>
                    <span class="comments-date">  ·  2017年08月07日</span>
                </div>

                <div class="fmt mb10"><p>支持!!</p></div>

                <form action="/api/comment/1050000010532035/edit">
                    <div class="form-group">
                        <textarea class="editTextarea mono form-control mb10 hidden" rows="1" name="text" style="height: 28px; overflow: hidden; word-wrap: break-word;" >支持!!</textarea>
                    </div>
                </form>

                <p class="comment-ops not-reply">
                    <span class="comments-zan ">
                        <i class="fa fa-thumbs-up mr4" aria-hidden="true"></i>
                        <span class="comments-zan-text">赞</span>
                        <span class="comments-zan-value"></span>
                    </span>
                    
                    <span class="ml15 comments-reply-btn">回复</span>

                    <span class="pull-right editBtns hidden">
                      <button class="btn btn-link btn-xs cancel" type="button">取消</button>
                      <button class="btn btn-primary btn-xs edit ml10" type="button">保存</button>
                    </span>
                </p>

                <div class="reply-list reply-list--empty">

                    
                    <div class="reply-item reply-item--ops" data-obj="obj">
                        <a class="reply-inner-btn" href="javascript:;">添加回复</a>
                        
                    </div>
                </div>


            </div>
        </div>
                <div class="comments-item" data-id="1050000010547552">
            <div class="pull-left">
                <a href="/u/zhaomenghuan" target="_blank"><img class="avatar-32 " src="https://avatar-static.segmentfault.com/262/465/262465802-58cd40d15ba12_big64" alt=""></a>
            </div>
            <div class="comments-content">
                <div class="comment-trigger">
                    <div class="pull-right comment-option">
                                                <a href="#911" class="ml10" data-toggle="modal" data-target="#911" data-action="report" data-action-text="举报" data-module="comment" data-id="1050000010547552" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a>
                                            </div>
                    <strong><a target="_blank" href="/u/zhaomenghuan">匠心</a></strong>
                    <span class="comments-isAuthor ">作者</span>
                    <span class="comments-date">  ·  2017年08月08日</span>
                </div>

                <div class="fmt mb10"><p>感谢?</p></div>

                <form action="/api/comment/1050000010547552/edit">
                    <div class="form-group">
                        <textarea class="editTextarea mono form-control mb10 hidden" rows="1" name="text" style="height: 28px; overflow: hidden; word-wrap: break-word;" >感谢?</textarea>
                    </div>
                </form>

                <p class="comment-ops not-reply">
                    <span class="comments-zan ">
                        <i class="fa fa-thumbs-up mr4" aria-hidden="true"></i>
                        <span class="comments-zan-text">赞</span>
                        <span class="comments-zan-value"></span>
                    </span>
                    
                    <span class="ml15 comments-reply-btn">回复</span>

                    <span class="pull-right editBtns hidden">
                      <button class="btn btn-link btn-xs cancel" type="button">取消</button>
                      <button class="btn btn-primary btn-xs edit ml10" type="button">保存</button>
                    </span>
                </p>

                <div class="reply-list reply-list--empty">

                    
                    <div class="reply-item reply-item--ops" data-obj="obj">
                        <a class="reply-inner-btn" href="javascript:;">添加回复</a>
                        
                    </div>
                </div>


            </div>
        </div>
                <div class="comments-item" data-id="1050000011358116">
            <div class="pull-left">
                <a href="/u/lovae" target="_blank"><img class="avatar-32 " src="https://static.segmentfault.com/v-5c37017f/global/img/user-64.png" alt=""></a>
            </div>
            <div class="comments-content">
                <div class="comment-trigger">
                    <div class="pull-right comment-option">
                                                <a href="#911" class="ml10" data-toggle="modal" data-target="#911" data-action="report" data-action-text="举报" data-module="comment" data-id="1050000011358116" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a>
                                            </div>
                    <strong><a target="_blank" href="/u/lovae">lovae</a></strong>
                    <span class="comments-isAuthor hide"></span>
                    <span class="comments-date">  ·  2017年09月26日</span>
                </div>

                <div class="fmt mb10"><p>好文，感谢</p></div>

                <form action="/api/comment/1050000011358116/edit">
                    <div class="form-group">
                        <textarea class="editTextarea mono form-control mb10 hidden" rows="1" name="text" style="height: 28px; overflow: hidden; word-wrap: break-word;" >好文，感谢</textarea>
                    </div>
                </form>

                <p class="comment-ops not-reply">
                    <span class="comments-zan ">
                        <i class="fa fa-thumbs-up mr4" aria-hidden="true"></i>
                        <span class="comments-zan-text">赞</span>
                        <span class="comments-zan-value"></span>
                    </span>
                    
                    <span class="ml15 comments-reply-btn">回复</span>

                    <span class="pull-right editBtns hidden">
                      <button class="btn btn-link btn-xs cancel" type="button">取消</button>
                      <button class="btn btn-primary btn-xs edit ml10" type="button">保存</button>
                    </span>
                </p>

                <div class="reply-list reply-list--empty">

                    
                    <div class="reply-item reply-item--ops" data-obj="obj">
                        <a class="reply-inner-btn" href="javascript:;">添加回复</a>
                        
                    </div>
                </div>


            </div>
        </div>
                <div class="comments-item" data-id="1050000012750734">
            <div class="pull-left">
                <a href="/u/xiangwenhu" target="_blank"><img class="avatar-32 " src="https://avatar-static.segmentfault.com/296/529/2965292591-5975d171df48f_big64" alt=""></a>
            </div>
            <div class="comments-content">
                <div class="comment-trigger">
                    <div class="pull-right comment-option">
                                                <a href="#911" class="ml10" data-toggle="modal" data-target="#911" data-action="report" data-action-text="举报" data-module="comment" data-id="1050000012750734" data-typetext="评论" data-placement="top" title="举报"><span class="glyphicon glyphicon-flag" aria-hidden="true"></span></a>
                                            </div>
                    <strong><a target="_blank" href="/u/xiangwenhu">xiangwenhu</a></strong>
                    <span class="comments-isAuthor hide"></span>
                    <span class="comments-date">  ·  2018年01月08日</span>
                </div>

                <div class="fmt mb10"><p>好    _</p></div>

                <form action="/api/comment/1050000012750734/edit">
                    <div class="form-group">
                        <textarea class="editTextarea mono form-control mb10 hidden" rows="1" name="text" style="height: 28px; overflow: hidden; word-wrap: break-word;" >好    _</textarea>
                    </div>
                </form>

                <p class="comment-ops not-reply">
                    <span class="comments-zan ">
                        <i class="fa fa-thumbs-up mr4" aria-hidden="true"></i>
                        <span class="comments-zan-text">赞</span>
                        <span class="comments-zan-value"></span>
                    </span>
                    
                    <span class="ml15 comments-reply-btn">回复</span>

                    <span class="pull-right editBtns hidden">
                      <button class="btn btn-link btn-xs cancel" type="button">取消</button>
                      <button class="btn btn-primary btn-xs edit ml10" type="button">保存</button>
                    </span>
                </p>

                <div class="reply-list reply-list--empty">

                    
                    <div class="reply-item reply-item--ops" data-obj="obj">
                        <a class="reply-inner-btn" href="javascript:;">添加回复</a>
                        
                    </div>
                </div>


            </div>
        </div>
            </div>
    <div class="comments-loading hide">载入中...</div>
        <div class="comments-more hide"><a href="javascript:;">显示更多评论</a></div>
    

                                    <div class="comments-box" id="goToReplyEditor">
                <div class="pull-left">
                    <img class="avatar-32 "
                         src="https://static.segmentfault.com/v-5c37017f/global/img/user-128.png"
                         alt=""/>
                </div>
                <div class="comments-box-content">
                    <form action="/api/article/1190000010456158/comments/add">
                        <div class="form-group mb0">
                            <textarea name="text" rows="3" class="form-control"placeholder="文明社会，理性评论"></textarea>
                            <div class="mt15 text-right">
                                <button type="button" class="hide"></button>
                                <button class=" btn btn-primary" type="button">发布评论</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
                                                        </div>
    </div>


                                    
                
                

            </div><!-- /.main -->


            <div class="col-md-3 side hidden-sm hidden-xs mt30">
                                                
                <div class="mb25 hidden-md hidden-sm hidden-xs">
    <img src="https://static.segmentfault.com/sponsor/20190111.png" alt="Planets" usemap ="#gridsMap" width=255 height=136>
    <map name="gridsMap" id="gridsMap"></map>
    <div style="text-align: center;"><a style="text-align:center; color:#9E9E9E; font-size:12px" href="/sponsor">想在上方展示你的广告？</a></div>
            <script async src="https://static.segmentfault.com/sponsor/20190111.js"></script>
    </div>

                                <style>
                    .job-recommend-area a:not(:last-of-type) {margin-bottom:10px; display: block}
                    .job-recommend-area a:hover {text-decoration: none;}
                </style>
                <div class="hidden-md">
                    <div class="job-recommend">
                      <h3 class="job-title">推广链接</h3>
                      <div class="job-recommend-area">
                                                <script type='text/javascript'>
                            OA_show(7);
                            OA_show(9);
                            OA_show(10);
                            OA_show(15);
                            OA_show(16);
                        </script>
                      </div>
                    </div>
                    <style>
                    .job-recommend {margin-bottom: 30px;}
                    .job-title {
                        font-size: 14px;
                        color: #017E66;
                        font-weight: 500;
                        background: #BFE6D7;
                        margin: 0;
                        padding-top: 6px;
                        padding-bottom: 6px;
                        text-align: center;
                    }
                    .job-recommend-area {
                      padding: 13px;
                      border: 3px solid #EBF7F3;
                      border-top: none;
                    }
                    </style>
                    
                                    </div>

                                
                <div class="hidden-md ad-should-be-fixed">
                    <div class="mb25 block">
                        <script type='text/javascript'>
                            OA_show(1);
                        </script>
                    </div>
                </div>
                <div class="post-nav hidden-xs">
                    <div class="panel panel-default widget-outline">
                        <div class="panel-heading">目录</div>
                        <div class="panel-body">
                            <div class="nav-body" style="overflow:scroll">
                                <div class="highlight-title"></div>
                                <ul class="articleIndex"></ul>
                            </div>
                        </div>
                    </div>
                </div>

                
            </div><!-- /.side -->
        </div>
    </div>
</div>

<div id="shareToWeiboModal" class="modal" tabindex='-1'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span><span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">分享</h4>
            </div>
            <div class="modal-body">
                <p class="sfModal-content">
                    分享到微博？
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default dont-likeweibo" data-dismiss="modal">取消</button>
                <a href="" id="shareLink" class="btn btn-primary done-btn" target="_blank"
                   onclick="$('#shareToWeiboModal').modal('hide')">分享</a>
            </div>
        </div>
    </div>
</div>


<div class="modal widget-911" id="911" tabindex='-1'>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button class="close" data-dismiss="modal" type="button">
          <span aria-hidden="true">&times;</span>
          <span class="sr-only">Close</span>
        </button>
        <h4 class="modal-title"><span data-model="action"></span><span data-model="type"></span></h4>
      </div>
      <div class="modal-body">
        <form id="reportForm">
          <!-- 后台返回信息 -->
          <p class="alert alert-warning" data-model="returnMsg"></p>
          <div data-role="base">
            <p>
              <strong class="required">我要<span data-model="action"></span>该<span data-model="type"></span>，理由是：</strong>
            </p>
            <ul class="list-unstyled" data-model="list"></ul>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn-default pull-left" type="button" data-role="back" style="display:none">返回重选</button>
                <button class="btn btn-default" data-dismiss="modal" type="button">取消</button>
        <button class="btn btn-primary" data-role="submit" type="button">提交</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<div class="modal widget-seo" id="seo" tabindex='-1'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal" type="button">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title"><span data-model="action"></span><span data-model="type"></span></h4>
            </div>
            <div class="modal-body">
                <form id="seoForm">
                    <!-- 后台返回信息 -->
                    <p class="alert alert-warning" data-model="returnMsg"></p>
                    <div data-role="base">
                        <div class="form-group">
                            <label>SEO标题：</label><textarea style="min-height: 35px; width: 100%; max-height: 132px; overflow: hidden; overflow-wrap: break-word; height: 32px;" name="title" class="form-control" rows="1" placeholder="请输入SEO标题"></textarea>
                        </div>
                        <div class="form-group">
                            <label>SEO描述：</label><textarea style="min-height: 35px; max-height: 132px; overflow: hidden; overflow-wrap: break-word; height: 32px;" name="desc" class="form-control" rows="1" placeholder="请输入SEO描述"></textarea>
                        </div>
                        <div class="form-group">
                            <label>SEO keywords：</label><textarea style="min-height: 35px; max-height: 132px; overflow: hidden; overflow-wrap: break-word; height: 32px;" name="keywords" class="form-control" rows="1" placeholder="请输入SEO keywords"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" data-dismiss="modal" type="button">取消</button>
                <button class="btn btn-primary" data-role="submit" type="button">提交</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

    <div id="loginBanner"  class="hidden-sm hidden-xs loginBanner">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-md-7">
                <h1 class="title">在 SegmentFault，学习技能、解决问题</h1>
                <p class="desc">每个月，我们帮助 1000 万的开发者解决各种各样的技术问题。并助力他们在技术能力、职业生涯、影响力上获得提升。</p>
            </div>
            <div class="col-lg-3 col-lg-offset-3 col-md-4 col-md-offset-1">
                <form class="register-form clearfix" action="/api/user/phone/register">

                    
                    <a href="/user/register" class="SFLogin btn btn-lg btn-primary mr15">免费注册</a>
                    <a href="/user/login" class="SFRegister btn btn-lg btn-primary">立即登录</a>
                </form>
            </div>
        </div>
    </div>
    </div>






<footer id="footer">
    <div class="container">
        <div class="row hidden-xs">
            <dl class="col-sm-2 site-link">
                <dt>产品</dt>
                
                <dd><a href="/questions/hottest?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=热门问答">热门问答</a></dd>
                <dd><a href="/blogs/hottest?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=热门专栏">热门专栏</a></dd>
                <dd><a href="/lives?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=热门讲堂">热门讲堂</a></dd>
                <dd><a href="/events?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=最新活动">最新活动</a></dd>
                <dd><a href="/groups?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=圈子">圈子</a></dd>
                <dd><a href="/jobs?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=找工作">找工作</a></dd>
                <dd><a href="/app?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=product&utm_content=footer-links-hottest-questions&utm_term=app">移动客户端</a></dd>
                
            </dl>
            
            <dl class="col-sm-2 site-link">
                <dt>资源</dt>
                <dd><a href="/weekly?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-weekly&utm_term=每周精选">每周精选</a></dd>
                <dd><a href="/users?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-users&utm_term=用户排行榜">用户排行榜</a></dd>
                <dd><a href="/badges?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-badges&utm_term=徽章">徽章</a></dd>
                <dd><a href="/faq?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-faq&utm_term=帮助中心">帮助中心</a></dd>
                <dd><a href="/repu?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-repu&utm_term=声望与权限">声望与权限</a></dd>
                <dd><a href="/community?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-community&utm_term=社区服务中心">社区服务中心</a></dd>
                <dd><a href="https://docs.segmentfault.com?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=resource&utm_content=footer-links-docs&utm_term=开发手册">开发手册</a></dd>

   
            </dl>

            <dl class="col-sm-2 site-link">
                <dt>商务</dt>
                <dd><a href="https://business.segmentfault.com/services?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=business&utm_content=footer-links-services-rencai&utm_term=人才服务" target="_blank">人才服务</a></dd>
                <dd><a href="https://business.segmentfault.com/services?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=business&utm_content=footer-links-services-qiyeneixun&utm_term=企业服务" target="_blank">企业培训</a></dd>
                <dd><a href="https://business.segmentfault.com/services?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=business&utm_content=footer-links-services-huodongcehua&utm_term=活动策划" target="_blank">活动策划</a></dd>
                <dd><a href="https://business.segmentfault.com/ads?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=business&utm_content=footer-links-ads&utm_term=广告投放" target="_blank">广告投放</a></dd>
                <dd><a href="https://business.segmentfault.com/bc?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=business&utm_content=footer-links-bc&utm_term=区块链解决方案" target="_blank">区块链解决方案</a></dd>
                <dd><a href="https://business.segmentfault.com/contact?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=business&utm_content=footer-links-contact&utm_term=合作联系" target="_blank">合作联系</a></dd>
            </dl>
            
            <dl class="col-sm-2 site-link">
                <dt>关于</dt>
                <dd><a href="https://about.segmentfault.com/?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=about&utm_content=about-index&utm_term=关于我们">关于我们</a></dd>
                <dd><a href="https://about.segmentfault.com/careers.html?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=about&utm_content=about-careers&utm_term=加入我们">加入我们</a></dd>
                <dd><a href="https://about.segmentfault.com/contact.html?utm_source=sf-footer&utm_medium=footer-nav&utm_campaign=about&utm_content=about-contact&utm_term=联系我们">联系我们</a></dd>
            </dl>

            <dl class="col-sm-2 site-link">
                <dt>关注</dt>
                                <dd><a href="//segmentfault.com/blog/segmentfault" target="_blank">产品技术日志</a></dd>
                                <dd><a href="//segmentfault.com/blog/community_admin" target="_blank">社区运营日志</a></dd>
                                <dd><a href="//segmentfault.com/blog/segmentfault_news" target="_blank">市场运营日志</a></dd>
                                <dd><a href="//segmentfault.com/blog/segmentfault_team" target="_blank">团队日志</a></dd>
                                <dd><a href="//segmentfault.com/blog/interview" target="_blank">社区访谈</a></dd>
                                <dd>
                    <ul class="sn-inline">
                        <li>
                            <a class="entypo-wechart icon-sn-weixin weixin-popover-qrcode" data-toggle="popover" data-placement="top"  data-content="">微信</a>
                        </li>
                        <li>
                            <a href="http://weibo.com/segmentfault" target="_blank" class="entypo-weibo icon-sn-weibo" >新浪微博</a>
                        </li>
                        <li>
                            <a href="https://github.com/SegmentFault" target="_blank" class="entypo-facebook icon-sn-github">Github</a>
                        </li>
                        <li>
                            <a href="https://twitter.com/segment_fault" target="_blank" class="entypo-twitter icon-sn-twitter">Twitter</a>
                        </li>
                    </ul>
                </dd>
            </dl>

            <dl class="col-sm-2 site-link" id="license">
                <dt>条款</dt>
                <dd><a href="/tos">服务条款</a></dd>
                <dd><a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank">内容许可</a></dd>
                <dd>
                    <a href="/app" class="clearfix mt10 block"><img src="https://static.segmentfault.com/v-5c37017f/page/img/app/appQrcode.png" class="app-qrcode"></a>
                    <div class="app-download-desc">
                        <p>扫一扫下载 App</p>
                    </div>
                    
                </dd>
            </dl>
        </div>
        <div class="copyright">
            Copyright &copy; 2011-2019 SegmentFault. 当前呈现版本 17.06.16<br>
            <a href="http://www.miibeian.gov.cn/" rel="nofollow">浙ICP备 15005796号-2</a> &nbsp;
            <a target="_blank" href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010602002000" rel="nofollow">浙公网安备 33010602002000号</a>
            <span class="ml5">杭州堆栈科技有限公司版权所有</span>
            <P class="mt30">CDN 存储服务由 <a target="_blank" href="https://www.upyun.com/?utm_source=segmentfault&utm_medium=link&utm_campaign=upyun&md=segmentfault">又拍云</a> 赞助提供 </p>
        </div>
        <p class="text-center">
            <a class="js__view--selector hidden-sm hidden-md hidden-lg" data-action="mobile" href="javascript:;">移动版</a>
            <a class="js__view--selector hidden-sm hidden-md hidden-lg" data-action="desktop" href="javascript:;">桌面版</a>
        </p>
    </div>
</footer>

<div id="fixedTools" class="hidden-xs hidden-sm">
    <a id="backtop" class="hidden border-bottom" href="#">回顶部</a>
</div>

    <script id="loginModal" type="text/template">
    <div class="row bg-white login-modal">
        <div class="col-md-12 login-wrap">
            <form action="/api/user/login" method="POST" role="form" class="mt15">
                <div class="form-group hidden">
                                        <input type="text" class="form-control" name="remember" value="1"
                           autocomplete="off">
                </div>
                <div class="form-group">
                    <label for="username" class="control-label">手机号 或 Email</label>
                    <input type="text" class="form-control" name="username" tabindex="1" required placeholder="11 位手机号 或 Email"
                           autocomplete="off">
                </div>
                <div class="form-group">
                    <label class="control-label">密码</label><span class="pull-right"><a
                                href="/user/forgot" tabindex="4">忘记密码</a></span>
                    <input type="password" class="form-control" name="password" tabindex="2" required placeholder="请输入密码">
                </div>
                <div class="form-group">
                    <a
                            
                                                    href="/user/phoneLogin"
                            class="phoneLogin"
                                            >手机验证码登录</a>
                </div>
                <div class="form-group clearfix">
                    <button type="submit" class="btn-block btn btn-primary pull-right pl20 pr20" tabindex="3"
                            onclick='ga("send", "event", "email login button", "clicked", "login modal");'>登录
                    </button>
                </div>
            </form>
            <div class="text-muted text-center more-login-area">
    <span class="more-login-words">更多登录方式</span>
</div>
<div class="widget-login mb15 text-center">
    <a href="/user/oauth/google" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "google"});'><span
                class="icon-sn-google"></span></a>
    <a href="/user/oauth/github" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "github"});");'><span
                class="icon-sn-github"></span></a>
    <a href="/user/oauth/weibo" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "weibo"});'><span
                class="icon-sn-weibo"></span></a>
    <a href="/user/oauth/qq" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                class="icon-sn-qq"></span></a>
    <a href="/user/oauth/weixin" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                class="icon-sn-weixin"></span></a>
    <a href="/user/oauth/linkedin" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "linkedin"});'><span
                class="icon-sn-linkedin"></span></a>
    <span id="loginShowMore" style="cursor: pointer" class="mb5"><span class="icon-sn-dotted"></span></span>
    <a href="/user/oauth/twitter" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "twitter"});'><span
                class="icon-sn-twitter"></span></a>
    <a href="/user/oauth/facebook" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "facebook"});'><span
                class="icon-sn-facebook"></span></a>
    <a href="/user/oauth/douban" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "douban"});'><span
                class="icon-sn-douban"></span></a>
</div>
<div class="form-group clearfix">
    <a class="btn-block btn btn-default pull-right pl20 pr20 
                        SFLogin
             "

            
        onclick='ga("send", "event", "email login button", "clicked", "login modal");'>
                    注册新账号
            </a>
</div>
<p class="text-muted text-center mb15">登录即表示你同意网站的<a href="/tos" target="_blank">《服务条款》</a></p>        </div>
    </div>
</script>
    <script id="registerModal" type="text/template">
    <div class="row bg-white login-modal">
        <div class="col-md-12 login-wrap">
            
            <form action="/api/user/register" method="POST" role="form" class="mt15">
                <div class="form-group">
                    <label for="name" class="control-label">你的名字</label>
                    <input type="text" class="form-control" name="name" required placeholder="真实姓名或常用昵称">
                </div>
                
                <div class="form-group">
                    <label for="mail" class="control-label">手机号 或 Email</label>
                    <input type="text" class="form-control" id="login-name" name="mail" required placeholder="11 位手机号 或 Email">
                </div>
                
                <input type="text" class="hidden" name="register_type" value="mail">

                <div class="form-group">
                    <div class="captchaInput mb10">
                        <input type="text" class="form-control" name="cap" placeholder="右侧的验证码" style="width:50%; display: inline; margin-right: 15px;">
                        <span class="mt10">
                                <a id="loginReloadCaptcha" href="javascript:void(0)">
                                <img src="/user/captcha?w=135&h=34" class="cap" width="135" height="34"/></a>
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="phone-register-only hidden">
                        <div class="input-group">
                            <input name="code" type="text" class="form-control js-user-login__phone-code-value" placeholder="短信验证码">
                            <span class="input-group-btn">
                                <button class="btn btn-default js-user-login__phone-vaild-btn" style="width:96px;" type="button">
                                获取验证码</button>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="password" class="control-label">密码</label>
                    <input type="password" class="form-control" name="password" required placeholder="不少于 6 位的密码">
                </div>
                <div class="form-group clearfix">
                    <button type="submit" class="btn-block btn btn-primary pl20 pr20 pull-right"
                            onclick='ga("send", "event", "email register button", "clicked", "login modal");'>注册
                    </button>
                </div>
                                <div class="text-muted text-center more-login-area">
    <span class="more-login-words">更多登录方式</span>
</div>
<div class="widget-login mb15 text-center">
    <a href="/user/oauth/google" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "google"});'><span
                class="icon-sn-google"></span></a>
    <a href="/user/oauth/github" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "github"});");'><span
                class="icon-sn-github"></span></a>
    <a href="/user/oauth/weibo" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "weibo"});'><span
                class="icon-sn-weibo"></span></a>
    <a href="/user/oauth/qq" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                class="icon-sn-qq"></span></a>
    <a href="/user/oauth/weixin" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                class="icon-sn-weixin"></span></a>
    <a href="/user/oauth/linkedin" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "linkedin"});'><span
                class="icon-sn-linkedin"></span></a>
    <span id="loginShowMore" style="cursor: pointer" class="mb5"><span class="icon-sn-dotted"></span></span>
    <a href="/user/oauth/twitter" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "twitter"});'><span
                class="icon-sn-twitter"></span></a>
    <a href="/user/oauth/facebook" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "facebook"});'><span
                class="icon-sn-facebook"></span></a>
    <a href="/user/oauth/douban" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "douban"});'><span
                class="icon-sn-douban"></span></a>
</div>
<div class="form-group clearfix">
    <a class="btn-block btn btn-default pull-right pl20 pr20 
                        SFRegister
             "

            
        onclick='ga("send", "event", "email login button", "clicked", "login modal");'>
                    已有账号登录
            </a>
</div>
<p class="text-muted text-center mb15">登录即表示你同意网站的<a href="/tos" target="_blank">《服务条款》</a></p>            </form>
        </div>
    </div>
</script>
    <script id="phoneLoginModal" type="text/template">

    <div class="row bg-white login-modal phonelogin-modal">
        <div class="col-md-12 login-wrap">
            <form action="/api/user/phonelogin" method="POST" role="form" class="mt15">
                <div class="form-group">
                    <label for="phone" class="control-label required">手机号</label>
                    <input type="text" class="form-control phonelogin--phone" name="phone" tabindex="1" required placeholder="11 位手机号"
                           autocomplete="off">
                    <span class="help-block"></span>
                </div>

                <div class="form-group">
                    <label for="authCode" class="control-label required">验证码</label>
                    <div class="input-group">
                        <input type="text" class="form-control bindphone--code" name="authCode" placeholder="短信验证码">
                        <span class="input-group-btn">
                            <button class="btn btn-default user-bind__phone-vaild-btn" type="button">获取验证码</button>
                        </span>
                    </div>
                    <div class="col-sm-3"></div>
                </div>

                <div class="form-group">
                    <a 
                                                            href="/user/login"
                                class="SFRegister"
                                                >密码登录（手机号或 Email）</a>
                </div>
                <div class="form-group clearfix">
                    <button type="submit" class="btn-block btn btn-primary pull-right pl20 pr20" tabindex="3"
                            onclick='ga("send", "event", "email login button", "clicked", "login modal");'>登录
                    </button>
                </div>
            </form>
            <div class="text-muted text-center more-login-area">
    <span class="more-login-words">更多登录方式</span>
</div>
<div class="widget-login mb15 text-center">
    <a href="/user/oauth/google" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "google"});'><span
                class="icon-sn-google"></span></a>
    <a href="/user/oauth/github" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "github"});");'><span
                class="icon-sn-github"></span></a>
    <a href="/user/oauth/weibo" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "weibo"});'><span
                class="icon-sn-weibo"></span></a>
    <a href="/user/oauth/qq" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                class="icon-sn-qq"></span></a>
    <a href="/user/oauth/weixin" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "qq"});'><span
                class="icon-sn-weixin"></span></a>
    <a href="/user/oauth/linkedin" class=""
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "linkedin"});'><span
                class="icon-sn-linkedin"></span></a>
    <span id="loginShowMore" style="cursor: pointer" class="mb5"><span class="icon-sn-dotted"></span></span>
    <a href="/user/oauth/twitter" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "twitter"});'><span
                class="icon-sn-twitter"></span></a>
    <a href="/user/oauth/facebook" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "facebook"});'><span
                class="icon-sn-facebook"></span></a>
    <a href="/user/oauth/douban" class=" hidden"
       onclick='ga("send", "event", "3rd login button", "clicked", "login modal", {media: "douban"});'><span
                class="icon-sn-douban"></span></a>
</div>
<div class="form-group clearfix">
    <a class="btn-block btn btn-default pull-right pl20 pr20 
                        SFLogin
             "

            
        onclick='ga("send", "event", "email login button", "clicked", "login modal");'>
                    注册新账号
            </a>
</div>
<p class="text-muted text-center mb15">登录即表示你同意网站的<a href="/tos" target="_blank">《服务条款》</a></p>        </div>
    </div>
</script>
<script id="bindPhoneModal" type="text/template">
    <div class="bg-white bindphone-model">
        <div class="alert alert-warning" role="alert">
            为了保证账号安全，请先绑定手机
        </div>
        <div>
            <form class="form-horizontal form__bindphone-apply" style="background-color:#fff;padding:0;">
                <div class="form-group ">
                    <label for="phoneNumber" class="col-sm-3 control-label required" >手机号码</label>
                    <div class="col-sm-6">
                        <input type="text" class="form-control bindphone--phone" id="phoneNumber" name="phone" placeholder="仅只支持大陆手机号">
                    </div>
                    <div class="col-sm-3"></div>
                </div>
                <div class="form-group">
                    <label for="authCode" class="col-sm-3 control-label required">验证码</label>
                    <div class="col-sm-6">
                        <div class="input-group">
                            <input type="text" class="form-control bindphone--code" name="code" placeholder="短信验证码">
                            <span class="input-group-btn">
                                <button class="btn btn-default user-bind__phone-vaild-btn" type="button">获取验证码</button>
                            </span>
                        </div>
                    </div>
                    <div class="col-sm-3"></div>
                </div>
            </form>
        </div>

    </div>
</script>


<script>
    window.serverTime = 1547160668000;
</script>

<script>
    (function (w) {
        w.SF = {
            staticUrl: "https://static.segmentfault.com/v-5c37017f"
        };
        w.SF.token = (function () {
    var _QLQ = //'Ltf'
'a63'+'f'//'u'
+'0be'//'pT'
+'7'//'3V'
+//'lfC'
'lfC'+'1cc'//'P'
+'2'//'8Qt'
+//'x'
'54a'+'4D2'//'4D2'
+'a'//'C'
+//'4'
'd9'+//'Dp'
'e3'+'9e'//'FS'
+/* 'B'//'B' */''+//'C0'
'C0'+''///*'0i'*/'0i'
+/* 'lHe'//'lHe' */''+'1c'//'s'
+//'6'
'4d'+//'RBa'
'RBa'+'3d4'//'pu5'
+'6c'//'n6'
+//'qI'
'qI'+'d'//'epV'
, _nL1ZS = [[8,11],[15,18],[22,24],[26,29],[31,33]];

    for (var i = 0; i < _nL1ZS.length; i ++) {
        _QLQ = _QLQ.substring(0, _nL1ZS[i][0]) + _QLQ.substring(_nL1ZS[i][1]);
    }

    return _QLQ;
})();;
    })(window);

                var lock = {
        type: "",
        text: '',
        table: {"ban_post":[1,"\u4f60\u5df2\u7ecf\u88ab\u7981\u8a00, \u65e0\u6cd5\u8fdb\u884c\u6b64\u64cd\u4f5c, \u5982\u6709\u7591\u4e49\u8bf7\u63d0\u4ea4\u7533\u8bc9, \u6216\u8005\u53d1\u90ae\u4ef6\u5230pr@segmentfault.com"]}
    };

        var ddosMode = false;
    
        (function (currentUrl) {
        if (typeof URL != 'undefined') {
            var baseUrl = new URL('https://segmentfault.com');

            if (baseUrl.protocol != currentUrl.protocol
                || baseUrl.host != currentUrl.host) {
                window.location.href = baseUrl.protocol + '//' + baseUrl.host
                    + currentUrl.pathname + currentUrl.search + currentUrl.hash;
            }
        }
    })(window.location);
    </script>

             <script crossorigin src="https://static.segmentfault.com/v-5c37017f/3rd/assets.js"></script>
                 
        <script crossorigin src="https://static.segmentfault.com/v-5c37017f/blog/script/post.min.js"></script>
            

<script>
if (!!navigator.userAgent.match(/MicroMessenger/i)) {
    require.config({
        paths: { weixin_jsapi: '//res.wx.qq.com/open/js/jweixin-1.2.0' }
    });

    require(['weixin_jsapi'], function (wx) {
        var share = {"title":"JavaScript \u8fdb\u9636\u4e4b\u6df1\u5165\u7406\u89e3\u6570\u636e\u53cc\u5411\u7ed1\u5b9a","desc":"\u8c08\u8d77\u5f53\u524d\u524d\u7aef\u6700\u70ed\u95e8\u7684 js \u6846\u67b6\uff0c\u5fc5\u5c11\u4e0d\u4e86 Vue\u3001React\u3001Angular\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u6211\u4eec\u66f4\u591a\u7684\u662f\u5728\u4f7f\u7528\u6846\u67b6\uff0c\u5bf9\u4e8e\u6846\u67b6\u89e3\u51b3\u75db\u70b9\u80cc\u540e\u4f7f\u7528\u7684\u57fa\u672c\u539f\u7406\u5f80\u5f80\u5173\u6ce8\u4e0d\u591a\uff0c\u8fd1\u671f\u5728\u7814\u8bfb Vue.js \u6e90\u7801\uff0c\u4e5f\u5728\u5199\u6e90\u7801\u89e3\u8bfb\u7684\u7cfb\u5217\u6587...","link":"https:\/\/segmentfault.com\/a\/1190000010456158","imgUrl":"https:\/\/segmentfault.com\/img\/remote\/1460000010065090?w=1008&amp;h=458"};
        share.title += ' - SegmentFault 思否';

        $.getJSON('/api/util/weixin/jsapi', function (o) {
            methods = o.data.jsApiList.slice();

            wx.config(o.data);
            wx.error(console.error);
            wx.ready(function () {
                methods.forEach(function (method) {
                    wx[method](share);
                });
            });
        });
    });
}
</script>

<script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-918487-8']);
    _gaq.push(['_trackPageview']);
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
        a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

                
        

            

    ga('create', 'UA-918487-8', 'auto', {
        'userID'
    : 0,
        'createdTime'
    : 0,
        'now'
    : 1547160668,
        'allowLinker'
    : true });
    ga('require', 'linker');
    ga('linker:autoLink', ['docs.segmentfault.com'] );
    ga('set', 'dimension1', 'guest');
    ga('send', 'pageview');

</script>

<script>
    var _hmt = _hmt || [];
    (function () {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?e23800c454aa573c0ccb16b52665ac26";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>



</body>
</html>

